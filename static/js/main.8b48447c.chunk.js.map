{"version":3,"sources":["redux/repository/repository.types.js","components/controll-panel/controll-panel.component.jsx","redux/repository/repository.actions.js","github_logo.png","components/header/header.component.jsx","components/collection/collection.component.jsx","components/pagination/pagination.component.jsx","pages/home/home.component.jsx","App.js","reportWebVitals.js","redux/repository/repository.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["RepositoryActionTypes","FETCH_REPOSITORY_START","FETCH_REPOSITORY_SUCCESS","FETCH_REPOSITORY_FAILURE","SET_NAME_SEARCH","SET_LANGUAGE_SEARCH","SET_SEARCH_ORDER","SET_PAGE_INDEX","connect","dispatch","setNameSearch","input","type","payload","setLanguageSearch","setSearchOrder","className","TextField","label","InputLabelProps","shrink","variant","onChange","event","target","value","InputLabel","htmlFor","Select","native","inputProps","name","id","Header","src","githubLogo","alt","state","repositories","repository","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","items","map","row","scope","language","html_url","stargazers_count","score","incomplete","incomplete_results","pageIndex","setPageIndex","index","fontSize","onClick","isFetching","nameSearch","languageSearch","searchOrder","fetchRepositoriesStartAsync","getState","a","axios","get","params","q","sort","order","page","jsonData","data","error","message","props","useEffect","CircularProgress","App","exact","path","HomePage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","errorMsg","undefined","repositoryReducer","action","combineReducers","middlewares","logger","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gYAUeA,EAVe,CAC5BC,uBAAwB,yBACxBC,yBAA0B,2BAC1BC,yBAA0B,2BAC1BC,gBAAiB,kBACjBC,oBAAqB,sBACrBC,iBAAkB,mBAClBC,eAAgB,kB,gBC4DHC,cAAQ,MANI,SAAAC,GAAQ,MAAK,CACtCC,cAAe,SAAAC,GAAK,OAAIF,EC5CG,SAAAE,GAAK,MAAK,CACrCC,KAAMZ,EAAsBI,gBAC5BS,QAASF,GD0CwBD,CAAcC,KAC/CG,kBAAmB,SAAAH,GAAK,OAAIF,ECxCG,SAAAE,GAAK,MAAK,CACzCC,KAAMZ,EAAsBK,oBAC5BQ,QAASF,GDsC4BG,CAAkBH,KACvDI,eAAgB,SAAAJ,GAAK,OAAIF,ECpCG,SAAAE,GAAK,MAAK,CACtCC,KAAMZ,EAAsBM,iBAC5BO,QAASF,GDkCyBI,CAAeJ,QAGpCH,EAxDO,SAAC,GAA0D,IAAxDE,EAAuD,EAAvDA,cAAeI,EAAwC,EAAxCA,kBAAmBC,EAAqB,EAArBA,eAazD,OACE,sBAAKC,UAAU,iBAAf,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,cACNC,gBAAiB,CACfC,QAAQ,GAEVC,QAAQ,WACRC,SApBkB,SAACC,GACvBb,EAAca,EAAMC,OAAOC,UAqBzB,cAACR,EAAA,EAAD,CACEC,MAAM,kBACNC,gBAAiB,CACfC,QAAQ,GAEVC,QAAQ,WACRC,SAxBsB,SAACC,GAC3BT,EAAkBS,EAAMC,OAAOC,UAyB7B,gCACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,kBAApB,mBACA,eAACC,EAAA,EAAD,CACEC,QAAM,EACNP,SA1BiB,SAACC,GACxBR,EAAeQ,EAAMC,OAAOC,QA0BtBP,MAAM,QACNY,WAAY,CACVC,KAAM,QACNC,GAAI,mBANR,UASE,wBAAQP,MAAM,OAAd,kBACA,wBAAQA,MAAM,MAAd,6BEtDK,MAA0B,wCCgB1BQ,G,OATA,WACb,OACE,sBAAKjB,UAAU,SAAf,UACE,qBAAKA,UAAU,OAAOkB,IAAKC,EAAYC,IAAI,SAC3C,cAAC,EAAD,S,gFCuCS5B,G,OAAAA,aAJS,SAAA6B,GAAK,MAAK,CAChCC,aAAcD,EAAME,WAAWD,gBAGlB9B,EArCI,SAAC,GAAsB,IAApB8B,EAAmB,EAAnBA,aACpB,OACE,qBAAKtB,UAAU,iBAAf,SACE,cAACwB,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAO3B,UAAU,GAAjB,UACE,cAAC4B,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,kBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,wBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,wBAGJ,cAACC,EAAA,EAAD,UACGV,EAAgBA,EAAaW,MAAMC,KAAI,SAACC,GAAD,OACtC,eAACN,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWL,UAAU,KAAKW,MAAM,MAAhC,SACGD,EAAIpB,OAEP,cAACe,EAAA,EAAD,UAAYK,EAAIE,WAChB,cAACP,EAAA,EAAD,UAAYK,EAAIG,WAChB,cAACR,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BI,EAAII,mBAC9B,cAACT,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BI,EAAIK,UAPjBL,EAAInB,OASf,kB,kCCGHxB,G,OAAAA,aATS,SAAA6B,GAAK,MAAK,CAChCoB,WAAYpB,EAAME,WAAWD,aAAeD,EAAME,WAAWD,aAAaoB,mBAAqB,KAC/FC,UAAWtB,EAAME,WAAWoB,cAGH,SAAAlD,GAAQ,MAAK,CACtCmD,aAAc,SAAAC,GAAK,OAAIpD,EJLG,SAAAoD,GAAK,MAAK,CACpCjD,KAAMZ,EAAsBO,eAC5BM,QAASgD,GIGuBD,CAAaC,QAGhCrD,EAhCI,SAAC,GAA6C,IAA3CiD,EAA0C,EAA1CA,WAAYE,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC3C,OACE,sBAAK5C,UAAU,uBAAf,UAEI2C,EAAY,EACV,cAAC,IAAD,CAA+BG,SAAS,QACtCC,QAAS,kBACPH,EAAaD,EAAY,MAC3B,KAEN,qBAAK3C,UAAU,cAAf,SACE,yCAAY2C,EAAZ,SAGAF,EAAa,KACX,cAAC,IAAD,CAAgCK,SAAS,QACvCC,QAAS,kBACPH,EAAaD,EAAY,a,2CCqBxBnD,eAZS,SAAA6B,GAAK,MAAK,CAChC2B,WAAY3B,EAAME,WAAWyB,WAC7BC,WAAY5B,EAAME,WAAW0B,WAC7BC,eAAgB7B,EAAME,WAAW2B,eACjCC,YAAa9B,EAAME,WAAW4B,YAC9BR,UAAWtB,EAAME,WAAWoB,cAGH,SAAAlD,GAAQ,MAAK,CACtC2D,4BAA6B,kBAAM3D,ELLnC,uCAAO,WAAOA,EAAU4D,GAAjB,2BAAAC,EAAA,+DACkBD,IAAf9B,EADH,EACGA,WACA0B,EAAuD1B,EAAvD0B,WAAYC,EAA2C3B,EAA3C2B,eAAgBC,EAA2B5B,EAA3B4B,YAAaR,EAAcpB,EAAdoB,UAEjDlD,EAvCuC,CACzCG,KAAMZ,EAAsBC,yBAkCrB,kBAMoBsE,IAAMC,IAAI,6CAA8C,CAC7EC,OAAQ,CACNC,EAAE,GAAD,OAAKT,EAAL,qBAA4BC,GAC7BS,KAAM,QACNC,MAAOT,EACPU,KAAMlB,KAXP,OAMGmB,EANH,OAcHrE,GA7CgCsE,EA6CAD,EAASC,KA7CA,CAC7CnE,KAAMZ,EAAsBE,yBAC5BW,QAASkE,KA6BF,kDAgBHtE,GA1CgCuE,EA0CA,KAAMC,QA1CI,CAC9CrE,KAAMZ,EAAsBG,yBAC5BU,QAASmE,KAwBF,kCA1B6B,IAAAA,EALAD,IA+B7B,qBAAP,6DKQavE,EAnCE,SAAC,GAA+C,IAA7C4D,EAA4C,EAA5CA,4BAAgCc,EAAY,iBACtDlB,EAAmEkB,EAAnElB,WAAYC,EAAuDiB,EAAvDjB,WAAYC,EAA2CgB,EAA3ChB,eAAgBC,EAA2Be,EAA3Bf,YAAaR,EAAcuB,EAAdvB,UAM7D,OAJAwB,qBAAU,WACRf,MACC,CAACA,EAA6BH,EAAYC,EAAgBC,EAAaR,IAGxE,8BAEIK,EACE,qBAAKhD,UAAU,kBAAf,SACE,cAACoE,EAAA,EAAD,MAEF,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,YCVGC,G,OAZH,WACV,OACE,sBAAKrE,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsE,OAAK,EAACC,KAAK,IAAI9C,UAAW+C,IACjC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAAS9C,UAAW+C,YCA/BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iDCLRQ,EAAgB,CACpBlC,YAAY,EACZ1B,aAAc,KACd2B,WAAY,GACZC,eAAgB,GAChBC,YAAa,OACbR,UAAW,EACXwC,cAAUC,GAkDGC,EA/CW,WAAoC,IAAnChE,EAAkC,uDAA1B6D,EAAeI,EAAW,uCAC3D,OAAQA,EAAO1F,MACb,KAAKZ,EAAsBC,uBACzB,OAAO,2BACFoC,GADL,IAEE2B,YAAY,IAEhB,KAAKhE,EAAsBE,yBACzB,OAAO,2BACFmC,GADL,IAEE2B,YAAY,EACZ1B,aAAcgE,EAAOzF,UAEzB,KAAKb,EAAsBG,yBACzB,OAAO,2BACFkC,GADL,IAEE2B,YAAY,EACZmC,SAAUG,EAAOzF,UAErB,KAAKb,EAAsBI,gBACzB,OAAO,2BACFiC,GADL,IAEE4B,WAAYqC,EAAOzF,QACnB8C,UAAW,IAEf,KAAK3D,EAAsBK,oBACzB,OAAO,2BACFgC,GADL,IAEE6B,eAAgBoC,EAAOzF,QACvB8C,UAAW,IAEf,KAAK3D,EAAsBM,iBACzB,OAAO,2BACF+B,GADL,IAEE8B,YAAamC,EAAOzF,QACpB8C,UAAW,IAEf,KAAK3D,EAAsBO,eACzB,OAAO,2BACF8B,GADL,IAEEsB,UAAW2C,EAAOzF,UAEtB,QACE,OAAOwB,ICnDEkE,cAAgB,CAC7BhE,WAAY8D,ICCRG,EAAc,CAACC,IAAQC,KAIdC,EAFDC,YAAYC,EAAaC,IAAe,WAAf,EAAmBN,ICC1DO,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,IAAMM,WAAP,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1B1B,K","file":"static/js/main.8b48447c.chunk.js","sourcesContent":["const RepositoryActionTypes = {\r\n  FETCH_REPOSITORY_START: 'FETCH_REPOSITORY_START',\r\n  FETCH_REPOSITORY_SUCCESS: 'FETCH_REPOSITORY_SUCCESS',\r\n  FETCH_REPOSITORY_FAILURE: 'FETCH_REPOSITORY_FAILURE',\r\n  SET_NAME_SEARCH: 'SET_NAME_SEARCH',\r\n  SET_LANGUAGE_SEARCH: 'SET_LANGUAGE_SEARCH',\r\n  SET_SEARCH_ORDER: 'SET_SEARCH_ORDER',\r\n  SET_PAGE_INDEX: 'SET_PAGE_INDEX'\r\n};\r\n\r\nexport default RepositoryActionTypes;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport { setNameSearch, setLanguageSearch, setSearchOrder } from '../../redux/repository/repository.actions';\r\n\r\nimport './controll-panel.styles.scss';\r\n\r\nconst ControllPanel = ({ setNameSearch, setLanguageSearch, setSearchOrder }) => {\r\n  const handleNameInput = (event) => {\r\n    setNameSearch(event.target.value);\r\n  };\r\n\r\n  const handleLanguageInput = (event) => {\r\n    setLanguageSearch(event.target.value);\r\n  };\r\n\r\n  const handleOrderInput = (event) => {\r\n    setSearchOrder(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"controll-panel\">\r\n      <TextField\r\n        label=\"Name Search\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n        onChange={handleNameInput}\r\n      />\r\n      <TextField\r\n        label=\"Language Search\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n        onChange={handleLanguageInput}\r\n      />\r\n      <div>\r\n        <InputLabel htmlFor=\"outlined-native\">Order</InputLabel>\r\n        <Select\r\n          native\r\n          onChange={handleOrderInput}\r\n          label=\"Order\"\r\n          inputProps={{\r\n            name: 'order',\r\n            id: 'outlined-native',\r\n          }}\r\n        >\r\n          <option value=\"desc\">DESC</option>\r\n          <option value=\"asc\">ASC</option>\r\n        </Select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setNameSearch: input => dispatch(setNameSearch(input)),\r\n  setLanguageSearch: input => dispatch(setLanguageSearch(input)),\r\n  setSearchOrder: input => dispatch(setSearchOrder(input))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ControllPanel);","import axios from 'axios';\r\n\r\nimport RepositoryActionTypes from './repository.types';\r\n\r\nexport const fetchRepositoryStart = () => ({\r\n  type: RepositoryActionTypes.FETCH_REPOSITORY_START\r\n});\r\n\r\nexport const fetchRepositorySuccess = data => ({\r\n  type: RepositoryActionTypes.FETCH_REPOSITORY_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const fetchRepositoryFailure = error => ({\r\n  type: RepositoryActionTypes.FETCH_REPOSITORY_FAILURE,\r\n  payload: error\r\n});\r\n\r\nexport const setNameSearch = input => ({\r\n  type: RepositoryActionTypes.SET_NAME_SEARCH,\r\n  payload: input\r\n});\r\n\r\nexport const setLanguageSearch = input => ({\r\n  type: RepositoryActionTypes.SET_LANGUAGE_SEARCH,\r\n  payload: input\r\n});\r\n\r\nexport const setSearchOrder = input => ({\r\n  type: RepositoryActionTypes.SET_SEARCH_ORDER,\r\n  payload: input\r\n});\r\n\r\nexport const setPageIndex = index => ({\r\n  type: RepositoryActionTypes.SET_PAGE_INDEX,\r\n  payload: index\r\n});\r\n\r\nexport const fetchRepositoriesStartAsync = () => {\r\n  return async (dispatch, getState) => {\r\n    const { repository } = getState();\r\n    const { nameSearch, languageSearch, searchOrder, pageIndex } = repository;\r\n\r\n    dispatch(fetchRepositoryStart());\r\n    try {\r\n      const jsonData = await axios.get('https://api.github.com/search/repositories', {\r\n        params: {\r\n          q: `${nameSearch}+language:${languageSearch}`,\r\n          sort: \"stars\",\r\n          order: searchOrder,\r\n          page: pageIndex\r\n        }\r\n      });\r\n      dispatch(fetchRepositorySuccess(jsonData.data));\r\n    } catch (error) {\r\n      dispatch(fetchRepositoryFailure(error.message));\r\n    }\r\n  };\r\n};","export default __webpack_public_path__ + \"static/media/github_logo.88fb18a3.png\";","import React from 'react';\r\n\r\nimport ControllPanel from '../../components/controll-panel/controll-panel.component';\r\nimport githubLogo from '../../github_logo.png';\r\n\r\nimport './header.styles.scss';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <img className=\"logo\" src={githubLogo} alt=\"Logo\" />\r\n      <ControllPanel></ControllPanel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport './collection.styles.scss';\r\n\r\nconst Collection = ({ repositories }) => {\r\n  return (\r\n    <div className=\"collection-row\">\r\n      <TableContainer component={Paper}>\r\n        <Table className=\"\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Language</TableCell>\r\n              <TableCell>URL</TableCell>\r\n              <TableCell align=\"right\">Stargazers</TableCell>\r\n              <TableCell align=\"right\">Score</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {repositories ? (repositories.items.map((row) => (\r\n              <TableRow key={row.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell>{row.language}</TableCell>\r\n                <TableCell>{row.html_url}</TableCell>\r\n                <TableCell align=\"right\">{row.stargazers_count}</TableCell>\r\n                <TableCell align=\"right\">{row.score}</TableCell>\r\n              </TableRow>\r\n            ))) : null}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  repositories: state.repository.repositories\r\n});\r\n\r\nexport default connect(mapStateToProps)(Collection);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport KeyboardArrowLeftOutlinedIcon from '@material-ui/icons/KeyboardArrowLeftOutlined';\r\nimport KeyboardArrowRightOutlinedIcon from '@material-ui/icons/KeyboardArrowRightOutlined';\r\n\r\nimport { setPageIndex } from '../../redux/repository/repository.actions';\r\n\r\nimport './pagination.styles.scss';\r\n\r\nconst Pagination = ({ incomplete, pageIndex, setPageIndex }) => {\r\n  return (\r\n    <div className=\"pagination-container\">\r\n      {\r\n        pageIndex > 1 ?\r\n          <KeyboardArrowLeftOutlinedIcon fontSize=\"large\"\r\n            onClick={() =>\r\n              setPageIndex(pageIndex - 1)} />\r\n          : null\r\n      }\r\n      <div className=\"page-string\">\r\n        <span>Page {pageIndex} </span>\r\n      </div>\r\n      {\r\n        incomplete ? null :\r\n          <KeyboardArrowRightOutlinedIcon fontSize=\"large\"\r\n            onClick={() =>\r\n              setPageIndex(pageIndex + 1)} />\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  incomplete: state.repository.repositories ? state.repository.repositories.incomplete_results : null,\r\n  pageIndex: state.repository.pageIndex\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setPageIndex: index => dispatch(setPageIndex(index))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Collection from '../../components/collection/collection.component';\r\nimport Pagination from '../../components/pagination/pagination.component';\r\n\r\nimport { fetchRepositoriesStartAsync } from '../../redux/repository/repository.actions';\r\n\r\nimport './home.styles.scss';\r\n\r\nconst HomePage = ({ fetchRepositoriesStartAsync, ...props }) => {\r\n  const { isFetching, nameSearch, languageSearch, searchOrder, pageIndex } = props;\r\n\r\n  useEffect(() => {\r\n    fetchRepositoriesStartAsync();\r\n  }, [fetchRepositoriesStartAsync, nameSearch, languageSearch, searchOrder, pageIndex]);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        isFetching ?\r\n          <div className=\"loading-content\">\r\n            <CircularProgress />\r\n          </div> :\r\n          <div>\r\n            <Pagination />\r\n            <Collection />\r\n          </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isFetching: state.repository.isFetching,\r\n  nameSearch: state.repository.nameSearch,\r\n  languageSearch: state.repository.languageSearch,\r\n  searchOrder: state.repository.searchOrder,\r\n  pageIndex: state.repository.pageIndex\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchRepositoriesStartAsync: () => dispatch(fetchRepositoriesStartAsync())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","import { Switch, Route } from 'react-router-dom';\r\n\r\nimport Header from './components/header/header.component';\r\nimport HomePage from './pages/home/home.component';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header></Header>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route exact path=\"/:page\" component={HomePage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import RepositoryActionTypes from './repository.types';\r\n\r\nconst INITIAL_STATE = {\r\n  isFetching: false,\r\n  repositories: null,\r\n  nameSearch: \"\",\r\n  languageSearch: \"\",\r\n  searchOrder: \"desc\",\r\n  pageIndex: 1,\r\n  errorMsg: undefined\r\n};\r\n\r\nconst repositoryReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case RepositoryActionTypes.FETCH_REPOSITORY_START:\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      };\r\n    case RepositoryActionTypes.FETCH_REPOSITORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        repositories: action.payload\r\n      };\r\n    case RepositoryActionTypes.FETCH_REPOSITORY_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        errorMsg: action.payload\r\n      };\r\n    case RepositoryActionTypes.SET_NAME_SEARCH:\r\n      return {\r\n        ...state,\r\n        nameSearch: action.payload,\r\n        pageIndex: 1\r\n      };\r\n    case RepositoryActionTypes.SET_LANGUAGE_SEARCH:\r\n      return {\r\n        ...state,\r\n        languageSearch: action.payload,\r\n        pageIndex: 1\r\n      };\r\n    case RepositoryActionTypes.SET_SEARCH_ORDER:\r\n      return {\r\n        ...state,\r\n        searchOrder: action.payload,\r\n        pageIndex: 1\r\n      };\r\n    case RepositoryActionTypes.SET_PAGE_INDEX:\r\n      return {\r\n        ...state,\r\n        pageIndex: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default repositoryReducer;","import { combineReducers } from 'redux';\r\n\r\nimport repositoryReducer from './repository/repository.reducer';\r\n\r\nexport default combineReducers({\r\n  repository: repositoryReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [logger, thunk];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}